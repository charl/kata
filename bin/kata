#!/bin/env ruby
require 'kata'
require 'ostruct'
require 'optparse'

def usage
  return <<EOF
NAME
    kata - Ruby kata management

SYNOPSIS
    kata [COMMAND] [ARGS]

DESCRIPTION
    The kata gem allows one to manage their personal development in the
    practice of writing code through repitition.

PRIMARY COMMANDS
    kata setup file [repository]
        Setup a github repo for the kata development session.  Use a repository
        if it is provided and do not create a new one

    kata take file
        Start a kata development session

    kata version
        Current installed version number

    kata help
        This usage message
EOF
end

options = OpenStruct.new(
  {
    :repo => true,
    :language => 'ruby',
  }
)

OptionParser.new do |opts|
  opts.banner = usage

  opts.on('-n', '--no-repo', 'Do not create a new repository') do
    options.repo = false
  end

  opts.on('-l[OPTIONAL]', '--language[=OPTIONAL]', 'Setup the kata file tree using the specified language') do |lang|
    options.language = lang
  end
end.parse!

options.action = ARGV.shift.downcase.to_sym
options.file = ARGV.shift

case options.action
  when :setup
    raise ArgumentError unless options.file && File.exists?(options.file)

    name = nil

    File.open(options.file).each do |line|
      if line.match /^kata *\"([^\"]*)\" *do$/
        name = $1
        break
      end
    end

    setup = Kata::Setup::Base.new(name)
    setup.build_tree(options.language)
    setup.create_repo(options) rescue Exception
  when :take
    load options.file
  when :version
    puts "kata #{Kata::VERSION}"
  else
    puts usage
end
